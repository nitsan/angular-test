name: Write Info to File
on:
  push:
    branches:
      - master

jobs:
  write-info:
    runs-on: ubuntu-latest
    name: Write Info
    steps:
      - uses: actions/checkout@v3
      - name: Get Info
        run: |
          echo "shortCommit=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "currentVersion=$(cat info.json | jq -r '.version')" >> $GITHUB_ENV
      - name: 'Calc next version'
        id: next-version
        shell: bash
        run: |
          split=(${VERSION//.// })
          index=$((${#split[@]}-1))
          patchVersion=${split[$index]}
          echo nextPatchVersion=$(patchVersion + 1) >> $GITHUB_ENV
        env:
          VERSION: ${{ env.currentVersion }}
      - name: 'echo patch'
        run: echo "$PATCH_VERSION"
        env:
          PATCH_VERSION: ${{ env.nextPatchVersion }}
      - name: Update short commit
        uses: jossef/action-set-json-field@v2
        with:
          file: info.json
          field: shortCommit
          value: ${{ env.shortCommit }}
      - name: Update new version
        uses: jossef/action-set-json-field@v2
        with:
          file: info.json
          field: version
          value: ${{ env.currentVersion }}
      - name: 'Setup GIT'
        run: |
          echo "Setting email to: ${GITHUB_EMAIL}"
          echo "Setting user to: ${GITHUB_ACTOR}"
          echo "Commit message: $GITHUB_COMMIT_MESSAGE"
          git config user.email "$GITHUB_EMAIL"
          git config user.name "$GITHUB_ACTOR"
      - name: 'Push version'
        run: |
          git add -A
          git commit -m "docs(): bumping release $SHORT_COMMIT"
          git push "https://$GITHUB_ACTOR@github.com/$GITHUB_REPOSITORY"
        env:
          SHORT_COMMIT: ${{ env.shortCommit }}
